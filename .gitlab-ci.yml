stages:
  - test
  - build
  - deploy

build_development:docker_image:
  stage: build
  image: docker:20.10
  tags: [dot-highcpu]
  allow_failure: false
  variables:
    DOT_DOCKERHUB_REPO: ${DOT_DOCKERHUB_USERNAME}/playground.boilerplates.${CI_PROJECT_NAME}
  before_script:
    - echo ${DOT_DOCKERHUB_PASSWORD} | docker login -u ${DOT_DOCKERHUB_USERNAME} --password-stdin
  script:
    - cp $DOTENV .env
    - docker build
      --progress plain
      --tag ${DOT_DOCKERHUB_REPO}:${CI_COMMIT_BRANCH}${CI_COMMIT_SHORT_SHA}
      --tag ${DOT_DOCKERHUB_REPO}:${CI_COMMIT_BRANCH}
      --file Dockerfile
      .
    - docker push ${DOT_DOCKERHUB_REPO}:${CI_COMMIT_BRANCH}${CI_COMMIT_SHORT_SHA}
    - docker push ${DOT_DOCKERHUB_REPO}:${CI_COMMIT_BRANCH}

deploy_development:docker_swarm:
  stage: deploy
  image: asia.gcr.io/dot-gitlab-runner/ansible:2.9.21
  tags: [dot]
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "development"
  environment:
    name: development
    url: https://nextjs-fullstack-blrplt.dot.co.id
  before_script:
    - chmod 600 $ANSIBLE_KEY_FILE
    - ansible-galaxy collection install community.docker:==3.4.0
  script:
    - ansible-playbook --private-key $ANSIBLE_KEY_FILE -i deploy/hosts -v deploy/development.yml

include:
  # sonarqube scanner
  - component: gitlab.dot.co.id/cicd-components/sonarqube/cli@main
    inputs:
      stage: test
      run-on: /^development$/i
      runner-tag: dot
      sonar-project-key: playground_boilerplates_nextjs-fullstack_52185bc7-da83-4a5f-8afe-17a46afee79b
      sonar-project-name: dot-boilerplate-nextjs-fullstack